@model List<GraduationCeremony.Models.DB.GraduandDetails>

@{
    ViewData["Title"] = "Home Page";
}

<style>
    .container {
        text-align: center;
        max-width: 800px;
        margin: 0 auto;
    }

    .display-4 {
        font-size: 2.5rem;
    }

    .intro-text {
        font-size: 1.2rem;
    }

    .search-form {
        text-align: center;
        margin-top: 20px;
    }

    .search-input {
        width: 100%;
        max-width: 300px;
        padding: 10px;
        border: 2px solid #007bff;
        border-radius: 5px;
    }

    .search-button {
        background-color: #007bff;
        color: #fff;
        border: none;
        border-radius: 5px;
        padding: 10px 20px;
        cursor: pointer;
    }

    .auto-suggest-container {
        position: absolute;
        display: none;
        z-index: 100;
        background-color: #fff;
        border: 1px solid #ccc;
        border-radius: 5px;
        width: 100%;
        max-width: 300px;
    }
</style>

<div class="container">
    <h1 class="display-4">Search Graduand</h1>
</div>

<form id="searchForm" action="/GraduandDetails/Search" method="get" autocomplete="off" class="search-form">
    <div class="form-group">
        <input type="text" id="searchString" name="searchString" class="search-input"
               autocomplete="off" onkeyup="XAjaxRequest(this.value);" placeholder="Enter your email" required />
    </div>
    <div class="form-group">
        <button type="submit" class="search-button">Search</button>
    </div>
    <div id="autoSuggestContainer" class="auto-suggest-container">
    </div>
</form>


@* <h1>Graduand Details</h1> *@

<div class="container">
    <table class="table table-striped">
        <thead class="thead-dark">
            <tr>
                <th>Forename</th>
                <th>Surname</th>
                <th>Person Code</th>
                <th>Date of Birth</th>
                <th>Award Code</th>
                <th>Award Description</th>
                <th>Qualification Code</th>
                <th>Level</th>
                <th>Major 1</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.graduands.Forenames</td>
                    <td>@item.graduands.Surname</td>
                    <td>@item.graduandAwards.PersonCode</td>
                    <td>@item.graduands.DateOfBirth.ToShortDateString()</td>
                    <td>@item.awards.AwardCode</td>
                    <td>@item.awards.AwardDescription</td>
                    <td>@item.awards.QualificationCode</td>
                    <td>@item.awards.Level</td>
                    <td>@item.graduandAwards.Major1</td>
                    <td>
                        <a asp-controller="GraduandDetails" asp-action="Edit" asp-route-personCode="@item.graduands.PersonCode" class="btn btn-primary">Edit</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>



@*auto suggestion*@
<script type="text/javascript">
    function XAjaxRequest(searchString) {
        if (searchString.length < 1) {
            autoSuggestContainer.innerHTML = "";
            autoSuggestContainer.classList.remove("show-border");
            return;
        } else {
            autoSuggestContainer.classList.add("show-border");
        }


        //alert("testing searchString=" + searchString);
        var xmlhttp;
        xmlhttp = new XMLHttpRequest();
        var url = "/GraduandDetails/Search?searchString=" + searchString;
        // open connection, GET is quick and simple, false: sync page will freeze
        xmlhttp.open("GET", url, false);
        // send the request to IndexAJAX
        xmlhttp.send();
        document.getElementById("autoSuggestContainer").style.display = "block";
        //need to clear out the container for a fresh auto-suggest list
        //else the auto-suggest list can keep growing and growing with additional user keyups
        document.getElementById("autoSuggestContainer").innerHTML = "";

        var messageObject = JSON.parse(xmlhttp.responseText); // receive the respose text

        var autoSuggestions = "";

        for (var i = 0; i < messageObject.length; i++) {
            //HTML code generation demo
            //Works together with the ".innerHTML" statement after the end of this "for" block
            autoSuggestions +=
                "<input type=\"button\" value=\"" + messageObject[i].graduands.Forenames + "\" "
                + "onclick=\"document.getElementById('searchString').value = this.value; document.getElementById('searchForm').submit();\" "
                + "style=\"background-color: #f2f2f2;\" />";

            autoSuggestions += "<br />";
        }
        //place the generated buttons HTML code inside the display div
        document.getElementById("autoSuggestContainer").innerHTML = autoSuggestions;
    }
    </script>