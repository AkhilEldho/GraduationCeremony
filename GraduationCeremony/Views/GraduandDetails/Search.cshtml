@model IPagedList<GraduationCeremony.Models.DB.GraduandDetails>
@using X.PagedList.Mvc.Core;
@using X.PagedList;
@using X.PagedList.Web.Common;

@{
    ViewData["Title"] = "Home Page";
}

<style>
    .autoSuggest {
        position: absolute;
        background-color: #fff;
        border: 1px solid #ccc;
        border-radius: 4px;
        max-height: 200px;
        max-width: 400px;
        overflow-y: auto;
        overflow-x: auto;
        width: auto;
        margin: 10px;
        z-index: 1;
        margin-top: 5px;
        display: none;
    }

        .autoSuggest input[type="button"] {
            width: 100%;
            padding: 10px;
            font-size: 14px;
            color: #333;
            background-color: transparent;
            border: none;
            cursor: pointer;
            text-align: left;
            font-size: 15px;
            transition: background-color 0.3s;
        }

            .autoSuggest input[type="button"]:hover,
            .autoSuggest input[type="button"]:focus {
                background-color: #ffb0ad !important;
            }

</style>


<div class="container">
    <h1 class="display-4">Search Graduand</h1>
</div>

<form id="searchForm" action="/GraduandDetails/Search" method="get" autocomplete="off" class="search-form">
    <div class="form-group">
        <input type="text" id="searchString" name="searchString" class="search-input"
               autocomplete="off" onkeyup="XAjaxRequest(this.value);" placeholder="Enter name:" required />
    </div>
    <div class="form-group">
        <button type="submit" class="search-button">Search</button>
    </div>
    <div id="autoSuggestContainer" class="auto-suggest-container">
    </div>
</form>

<div class="container">
    @if (!string.IsNullOrEmpty(ViewBag.Message))
    {
        <div class="alert alert-danger error-message">@ViewBag.Message</div>
    }
    else
    {
        <div class="table-responsive">
            <table class="table table-striped table-bordered">
                <thead class="thead-white">
                    <tr>
                        <th>Forename</th>
                        <th>Surname</th>
                        <th>Person Code</th>
                        <th>Date of Birth</th>
                        <th>Award Code</th>
                        <th>Award Description</th>
                        <th>Qualification Code</th>
                        <th>Level</th>
                        <th>Email</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@item.graduands.Forenames</td>
                            <td>@item.graduands.Surname</td>
                            <td>@item.graduandAwards.PersonCode</td>
                            <td>@item.graduands.DateOfBirth.ToShortDateString()</td>
                            <td>@item.awards.AwardCode</td>
                            <td>@item.awards.AwardDescription</td>
                            <td>@item.awards.QualificationCode</td>
                            <td>@item.awards.Level</td>
                            <td>@item.graduands.CollegeEmail</td>
                            <td>
                                <a asp-controller="GraduandDetails" asp-action="Edit" asp-route-personCode="@item.graduands.PersonCode" class="btn btn-primary">Edit</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        @Html.PagedListPager(Model, page => Url.Action("Index",
        new { Page = page }),
        new PagedListRenderOptions
        {
            LiElementClasses = new string[] { "page-item" },
            PageClasses = new string[] { "page-link" }
            })
        }
</div>


<a asp-action="Index" class="btn btn-warning">Back to list</a>

