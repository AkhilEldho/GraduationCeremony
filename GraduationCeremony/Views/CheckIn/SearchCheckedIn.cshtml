@model IPagedList<GraduationCeremony.Models.DB.CheckIn>
@using X.PagedList.Mvc.Core;
@using X.PagedList;
@using X.PagedList.Web.Common;

@{
    ViewData["Title"] = "Checked-In List";
}

<div class="container mb-4">
    <div class="title">Checked-In List</div>

    <form id="searchForm" action="/CheckIn/SearchCheckedIn" method="get" autocomplete="off" class="search-form">
        <div class="form-group search-box">
            <input type="text" id="searchString" name="searchString" class="form-control search-input"
                   autocomplete="off" oninput="handleSearchInputChange();" onkeyup="XAjaxRequest(this.value);" placeholder="Enter name" required />

            <button type="submit" class="btn btn-outline-danger search-button btn-lg">Search</button>
        </div>
    </form>

    <div id="autoSuggestContainer" class="autoSuggest"></div>
</div>

<div class="container mt-5">
    @if (!string.IsNullOrEmpty(ViewBag.Message))
    {
        <div id="error-message" class="alert alert-danger error-message">@ViewBag.Message</div>
    }
    else
    {
        <div class="table-responsive mb-5">
            <table class="table table-striped table-bordered table-hover">
                <thead class="thead-dark">
                    <tr>
                        <th>#</th>
                        <th>Forenames</th>
                        <th>Surname</th>
                        <th>Award Code</th>
                        <th>Qualification Code</th>
                        <th>Award Description</th>
                        <th>Level</th>
                        <th>Date of Birth</th>
                        <th>College Email</th>
                        <th>Mobile</th>
                        <th>Major 1</th>
                        <th>Major 2</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@Html.DisplayFor(modelItem => item.GraduandAwardId)</td>
                            <td>@Html.DisplayFor(modelItem => item.Forenames)</td>
                            <td>@Html.DisplayFor(modelItem => item.Surname)</td>
                            <td>@Html.DisplayFor(modelItem => item.AwardCode)</td>
                            <td>@Html.DisplayFor(modelItem => item.QualificationCode)</td>
                            <td>@Html.DisplayFor(modelItem => item.AwardDescription)</td>
                            <td>@Html.DisplayFor(modelItem => item.Level)</td>
                            <td>@Html.DisplayFor(modelItem => item.DateOfBirth)</td>
                            <td>@Html.DisplayFor(modelItem => item.CollegeEmail)</td>
                            <td>@Html.DisplayFor(modelItem => item.Mobile)</td>
                            <td>@Html.DisplayFor(modelItem => item.Major1)</td>
                            <td>@Html.DisplayFor(modelItem => item.Major2)</td>
                            <td>
                                <a asp-action="Delete" asp-route-id="@item.PersonCode" class="btn btn-danger btn-sm">Remove</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        @if (Model.Count > 2)
        {
            @Html.PagedListPager(Model, page => Url.Action("Index",
    new { Page = page }),
    new PagedListRenderOptions
    {
    LiElementClasses = new string[] { "page-item" },
    PageClasses = new string[] { "page-link" }
    }
    )
        }
    }

    <div class="pagination-wrapper" style="text-align:center">
        <a asp-action="CheckedInList" class="btn btn-warning btn-back-to-list pagination-wrapper" style="width: 50%; text-align:center">Back to list</a>
    </div>
</div>

<!-- auto suggestion script -->
<script type="text/javascript">
    function XAjaxRequest(searchString) {
        if (searchString.length < 1) {
            autoSuggestContainer.innerHTML = "";
            autoSuggestContainer.style.display = "none";
            autoSuggestContainer.classList.remove("show-border");
            return;
        } else {
            autoSuggestContainer.classList.add("show-border");
        }

        var xmlhttp;
        xmlhttp = new XMLHttpRequest();
        var url = "/CheckIn/SearchCheckedInGraduands?searchString=" + searchString;
        xmlhttp.open("GET", url, false);
        xmlhttp.send();
        document.getElementById("autoSuggestContainer").style.display = "block";
        document.getElementById("autoSuggestContainer").innerHTML = "";

        var messageObject = JSON.parse(xmlhttp.responseText);

        if (messageObject.length === 0) {
            autoSuggestContainer.style.display = "none";
            return;
        }

        var autoSuggestions = "";

        for (var i = 0; i < messageObject.length; i++) {
            autoSuggestions +=
                "<input type=\"button\" value=\"" + messageObject[i].Forenames + " " + messageObject[i].Surname + "\" "
                + "onclick=\"document.getElementById('searchString').value = this.value; document.getElementById('searchForm').submit();\" "
                + "style=\"background-color:transparent;\" />";

            autoSuggestions += "<br />";
        }

        document.getElementById("autoSuggestContainer").innerHTML = autoSuggestions;
    }

    // Script to handle input change and remove error message
    function handleSearchInputChange() {
        // Clear the error message when the user starts typing
        document.getElementById("error-message").style.display = "none";
    }
</script>
