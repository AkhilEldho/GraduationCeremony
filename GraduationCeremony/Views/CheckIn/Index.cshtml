
@* to display autosuggest *@
@model GraduationCeremony.Models.DB.Graduand

@{
    ViewData["Title"] = "Home Page";
}

@*IDK CSS*@
<style>
    .autoSuggest {
        position: absolute;
        background-color: #fff;
        border: 1px solid #ccc;
        border-radius: 4px;
        max-height: 200px;
        max-width: 400px;
        overflow-y: auto;
        overflow-x: auto;
        width: auto;
        margin: 10px;
        z-index: 1;
        margin-top: 5px;
        display: none;
    }

        .autoSuggest input[type="button"] {
            width: 100%;
            padding: 10px;
            font-size: 14px;
            color: #333;
            background-color: transparent;
            border: none;
            cursor: pointer;
            text-align: left;
            font-size: 15px;
            transition: background-color 0.3s;
        }

            .autoSuggest input[type="button"]:hover,
            .autoSuggest input[type="button"]:focus {
                background-color: #ffb0ad !important;
            }

</style>


<div class="person-profile-container">
    <div class="card">
        <div class="card-body">
            <h1 class="display-4 text-danger">CHECK IN</h1>

            <form id="searchForm" action="/CheckIn/SearchCheckIn" method="get" autocomplete="off" class="search-form">
                <div class="form-group">
                    <input type="text" id="searchString" name="searchString" class="form-control search-input"
                           autocomplete="off" onkeyup="XAjaxRequest(this.value);" placeholder="Enter your email" required />
                </div>
                <div class="form-group">
                    <button type="submit" class="btn btn-danger search-button">Search</button>
                </div>
                <div id="autoSuggestContainer" class="autoSuggest" style="border: none;"></div>
            </form>

            @if (!string.IsNullOrEmpty(ViewBag.Message))
            {
                <div class="alert alert-danger error-message">@ViewBag.Message</div>
            }

        </div>
    </div>
</div>


@*auto suggestion*@
<script type="text/javascript">
    function XAjaxRequest(searchString) {
        if (searchString.length < 1) {
            autoSuggestContainer.innerHTML = "";
            autoSuggestContainer.classList.remove("show-border");
            return;
        } else {
            autoSuggestContainer.classList.add("show-border");
        }


        //alert("testing searchString=" + searchString);
        var xmlhttp;
        xmlhttp = new XMLHttpRequest();
        var url = "/CheckIn/SearchGraduandByName?searchString=" + searchString;
        // open connection, GET is quick and simple, false: sync page will freeze
        xmlhttp.open("GET", url, false);
        // send the request to IndexAJAX
        xmlhttp.send();
        document.getElementById("autoSuggestContainer").style.display = "block";
        //need to clear out the container for a fresh auto-suggest list
        //else the auto-suggest list can keep growing and growing with additional user keyups
        document.getElementById("autoSuggestContainer").innerHTML = "";

        var messageObject = JSON.parse(xmlhttp.responseText); // receive the respose text

        var autoSuggestions = "";

        for (var i = 0; i < messageObject.length; i++) {
            //HTML code generation demo
            //Works together with the ".innerHTML" statement after the end of this "for" block
            autoSuggestions +=
                "<input type=\"button\" value=\"" + messageObject[i].Forenames + " " + messageObject[i].Surname + "\" "
                + "onclick=\"document.getElementById('searchString').value = this.value; document.getElementById('searchForm').submit();\" "
                + "style=\"background-color:transparent;\" />";

            autoSuggestions += "<br />";
        }
        //place the generated buttons HTML code inside the display div
        document.getElementById("autoSuggestContainer").innerHTML = autoSuggestions;
    }
</script>